package view;
//log in class
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Frame;

import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;

import control.UpdateData;


import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class LoginFrame extends JFrame {


    String usernameToCheck;
    String passwordT;
    public static LoginFrame instance;
    String previousFrame;
    String incommingInputbox;
    String playerLabelID;
      UpdateData systemChecker ;
      private JLabel doneLabel;
      private JLabel jLabel1;
      private JLabel jLabel3;
      private JLabel jLabel4;
      private JLabel logoTitle;
      private JPasswordField password;
      private JTextField username;
      private JButton btnNewButton;
      
    /**
     * Creates new form MainFrame
     */
      
    /*  public static void main(String[] args) {
  		try {
  			LoginFrame frame = new LoginFrame();
  			frame.setVisible(true);
  		} catch (Exception e) {
  			e.printStackTrace();
  		}
  				
  			
  	}*/
    private LoginFrame() {
        
        initComponents();
        this.setResizable(false);
        incommingInputbox="";
        playerLabelID="";
        Font font1 = new Font("Serif", Font.BOLD, 20);
        username.setHorizontalAlignment(SwingConstants.CENTER);  
        username.setFont(font1);
        
        username.setForeground(Color.gray);
        username.setText("User Name"); 
         
        password.setHorizontalAlignment(SwingConstants.CENTER);  
        password.setFont(font1);
        password.setForeground(Color.gray);
        password.setText("Password");
        password.setEditable(true);
        
        
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

   	   this.addWindowListener(new java.awt.event.WindowAdapter() {
   	       @Override
   	       public void windowClosing(java.awt.event.WindowEvent windowEvent) {
   	           
   	         int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?","message",JOptionPane.YES_NO_OPTION);
   	           if (reply == JOptionPane.YES_OPTION) {
   	              Menu m=new Menu(control.Main.file,control.Main.dataFile);
   	              m.setVisible(true);
   	              setVisible(false);
   	           }  
   	       }
   	   });
      

    }
    
    public static LoginFrame getInstance(){
        if(instance == null)
            instance = new LoginFrame();
        
        return instance;
    }
    public void restartFrame(){
        instance = null;
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        logoTitle = new JLabel();
        logoTitle.setFont(new Font("Forte", Font.BOLD, 37));
        logoTitle.setBackground(new Color(165, 42, 42));
        username = new JTextField();
        password = new JPasswordField();
        doneLabel = new JLabel();
        jLabel3 = new JLabel();
        jLabel3.setFont(new Font("Palatino Linotype", Font.BOLD, 20));
        jLabel4 = new JLabel();
        jLabel4.setFont(new Font("Palatino Linotype", Font.BOLD, 20));
        jLabel1 = new JLabel();
        setTitle("Log In");
        setMaximumSize(new java.awt.Dimension(1200, 600));
        setMinimumSize(new java.awt.Dimension(1200, 600));
        setPreferredSize(new java.awt.Dimension(1200, 600));
        getContentPane().setLayout(null);

       
       
        logoTitle.setText("Monopoly Game");
        getContentPane().add(logoTitle);
        logoTitle.setBounds(198, 13, 660, 140);

       
       
        
        getContentPane().add(username);
        username.setBounds(347, 181, 360, 50);
        getContentPane().add(password);
        password.setBounds(347, 267, 360, 50);

        
        jLabel3.setText("USER NAME");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(166, 189, 130, 30);

        
        jLabel4.setText("PASSWORD");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(166, 275, 150, 30);
        
        btnNewButton = new JButton("New button");
        btnNewButton.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		cheakLogIn();
        		
        	}
        });
       
       
        btnNewButton.setIcon(new ImageIcon(LoginFrame.class.getResource("/images/loginbtn.jpg")));
        btnNewButton.setBackground(new Color(165, 42, 42));
        btnNewButton.setBounds(287, 375, 117, 39);
        getContentPane().add(btnNewButton);

        jLabel1.setIcon(new ImageIcon(LoginFrame.class.getResource("/images/login.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1208, 565);

      
        setLocationRelativeTo(null);
    }// </editor-fold>                        

      
    private void cheakLogIn() {                                       

                  String usernameInserted = username.getText();
            String passwordInserted = password.getText();
            
            systemChecker =UpdateData.getInstance();
            
           
  
            
            if(passwordInserted.length()<1 || passwordInserted.equals("Password")){
                JOptionPane.showMessageDialog(rootPane, "Password is missing");
            }
            else{
                
                
                 
                 if(systemChecker.checkPlayerDetails(usernameInserted, passwordInserted)){
                                   JOptionPane.showMessageDialog(rootPane, "Successfully Logged in");
                password.setText("");
                LodingGame plgf = LodingGame.getInstance();
                plgf.loginResponse(usernameInserted,incommingInputbox,playerLabelID,true);
                plgf.updateConnectedPlayers();
                this.setVisible(false);
                plgf.setVisible(true);
                
                 }
                 
                 else {
                     JOptionPane.showMessageDialog(rootPane, "Password is incorrect. Try Again");
                      password.setForeground(Color.gray);
                      password.setText("Password");
                 }
  
            }
        
                
            }
        
                 
                 
    public void assignPlayer(String playername,String incommingIB,String playerLabelIDD,String prvFrame){
        
        this.usernameToCheck=playername;
      username.setForeground(Color.BLACK);
      username.setText(usernameToCheck);
      
      previousFrame=prvFrame;
      
      if(previousFrame.equals("PreloadingGameFrame")){
           username.setEnabled(false);
      }
      
      
incommingInputbox=incommingIB;
playerLabelID=playerLabelIDD;

}
        
        
        
        
       
        
        
        
                                         

    
     public void setSource(String src){
            previousFrame = src;
        }
     
     public void resetFields(){
         
         username.setForeground(Color.gray);      username.setText("User Name");
          password.setForeground(Color.gray);   
           password.setText("Password");
           logoTitle.requestFocusInWindow();
         
     }
     
                                    

                                      


    

    // Variables declaration - do not modify                     
  

}
